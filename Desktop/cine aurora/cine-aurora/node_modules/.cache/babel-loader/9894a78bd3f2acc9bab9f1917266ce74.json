{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Agustin\\\\Desktop\\\\cine aurora\\\\cine-aurora\\\\src\\\\pages\\\\movieDetail\\\\movie.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from 'axios';\nimport YouTube from \"react-youtube\";\nimport \"./movie.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Movie() {\n  _s();\n\n  const API_KEY = '6a5fa2aa71d234b5f1b196ce04746bc5';\n  const API_URL = 'https://api.themoviedb.org/3';\n  const [trailer, setTrailer] = useState(null);\n  const [currentMovieDetail, setCurrentMovieDetail] = useState({\n    title: \"Loading Movies\"\n  });\n  const [playing, setPlaying] = useState(false);\n  const {\n    id\n  } = useParams();\n\n  const fetchMovie = async () => {\n    const {\n      data\n    } = await axios.get(`${API_URL}/movie/${id}`, {\n      params: {\n        api_key: API_KEY,\n        append_to_response: \"videos\"\n      }\n    });\n\n    if (data.videos && data.videos.results) {\n      const trailer = data.videos.results.find(vid => vid.type === \"Trailer\");\n      setTrailer(trailer ? trailer : data.videos.results[0]);\n    }\n\n    setCurrentMovieDetail(data);\n  };\n\n  useEffect(() => {\n    fetchMovie();\n  }, []);\n\n  const playTrailer = () => {\n    setPlaying(true);\n  };\n\n  const closeTrailer = () => {\n    setPlaying(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie__intro\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"movie__backdrop\",\n        src: `https://image.tmdb.org/t/p/original${currentMovieDetail.backdrop_path}`,\n        alt: \"Backdrop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie__detail\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"viewtrailer\",\n          children: playing && trailer ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(YouTube, {\n              videoId: trailer.key,\n              className: \"reproductor container\",\n              containerClassName: \"youtube-container amru\",\n              opts: {\n                width: \"100%\",\n                height: \"100%\",\n                playerVars: {\n                  autoplay: 1,\n                  controls: 0,\n                  cc_load_policy: 0,\n                  fs: 0,\n                  iv_load_policy: 0,\n                  modestbranding: 0,\n                  rel: 0,\n                  showinfo: 0\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: closeTrailer,\n              className: \"boton\",\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"\",\n              children: trailer ? /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"boton\",\n                onClick: playTrailer,\n                type: \"button\",\n                children: \"Watch Trailer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 41\n              }, this) : \"Sorry, no trailer available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Movie, \"L0ErEjyiq3O3Z1WGQEYZafI/AIs=\", false, function () {\n  return [useParams];\n});\n\n_c = Movie;\nexport default Movie;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"sources":["C:/Users/Agustin/Desktop/cine aurora/cine-aurora/src/pages/movieDetail/movie.js"],"names":["React","useEffect","useState","useParams","axios","YouTube","Movie","API_KEY","API_URL","trailer","setTrailer","currentMovieDetail","setCurrentMovieDetail","title","playing","setPlaying","id","fetchMovie","data","get","params","api_key","append_to_response","videos","results","find","vid","type","playTrailer","closeTrailer","backdrop_path","key","width","height","playerVars","autoplay","controls","cc_load_policy","fs","iv_load_policy","modestbranding","rel","showinfo"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from 'axios';\nimport YouTube from \"react-youtube\";\nimport \"./movie.css\";\n\nfunction Movie() {\n    const API_KEY = '6a5fa2aa71d234b5f1b196ce04746bc5';\n    const API_URL = 'https://api.themoviedb.org/3';\n\n    const [trailer, setTrailer] = useState(null);\n    const [currentMovieDetail, setCurrentMovieDetail] = useState({ title: \"Loading Movies\" });\n    const [playing, setPlaying] = useState(false);\n\n    const { id } = useParams();\n\n    const fetchMovie = async () => {\n        const { data } = await axios.get(`${API_URL}/movie/${id}`, {\n            params: {\n                api_key: API_KEY,\n                append_to_response: \"videos\"\n            }\n        });\n        if (data.videos && data.videos.results) {\n            const trailer = data.videos.results.find(\n                (vid) => vid.type === \"Trailer\"\n            );\n            setTrailer(trailer ? trailer : data.videos.results[0]);\n        }\n        setCurrentMovieDetail(data);\n    }\n\n    useEffect(() => {\n        fetchMovie();\n    }, []);\n\n    const playTrailer = () => {\n        setPlaying(true);\n    }\n\n    const closeTrailer = () => {\n        setPlaying(false);\n    }\n\n    return (\n        <div className=\"movie\">\n            <div className=\"movie__intro\">\n                <img className=\"movie__backdrop\" src={`https://image.tmdb.org/t/p/original${currentMovieDetail.backdrop_path}`} alt=\"Backdrop\" />\n            </div>\n            <div className=\"movie__detail\">\n                {/* Movie details */}\n            </div>\n\n            {/* Trailer */}\n            <div>\n                <main>\n                    <div className=\"viewtrailer\">\n                        {playing && trailer ? (\n                            <>\n                                <YouTube\n                                    videoId={trailer.key}\n                                    className=\"reproductor container\"\n                                    containerClassName={\"youtube-container amru\"}\n                                    opts={{\n                                        width: \"100%\",\n                                        height: \"100%\",\n                                        playerVars: {\n                                            autoplay: 1,\n                                            controls: 0,\n                                            cc_load_policy: 0,\n                                            fs: 0,\n                                            iv_load_policy: 0,\n                                            modestbranding: 0,\n                                            rel: 0,\n                                            showinfo: 0,\n                                        },\n                                    }}\n                                />\n                                <button onClick={closeTrailer} className=\"boton\">\n                                    Close\n                                </button>\n                            </>\n                        ) : (\n                            <div className=\"container\">\n                                <div className=\"\">\n                                    {trailer ? (\n                                        <button\n                                            className=\"boton\"\n                                            onClick={playTrailer}\n                                            type=\"button\"\n                                        >\n                                            Watch Trailer\n                                        </button>\n                                    ) : (\n                                        \"Sorry, no trailer available\"\n                                    )}\n                                </div>\n                            </div>\n                        )}\n                    </div>\n                </main>\n            </div>\n        </div>\n    );\n}\n\nexport default Movie;\n"]},"metadata":{},"sourceType":"module"}